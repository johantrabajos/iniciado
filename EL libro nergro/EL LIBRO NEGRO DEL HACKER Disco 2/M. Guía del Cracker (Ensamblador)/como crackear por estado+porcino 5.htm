<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0044)http://users.vr9.com/wktrelz/tktk/eporc5.htm -->
<HTML><HEAD><TITLE>WKT -- COMO CRACKEAR POR ESTADO+PORCINO --</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>

<META content="MSHTML 5.00.2014.210" name=GENERATOR></HEAD>
<BODY aLink=#efff2f bgColor=#000000 link=#c00061 text=#ffffff vLink=#00670e>
<CENTER><BR>
<TABLE border=2>
  <TBODY>
  <TR>
    <TD align=middle bgColor=#ffcc33 vAlign=center><B><FONT color=#ffffff 
      face=Arial size=+2>COMO CRAKEAR POR ESTADO+PORCINO</FONT> 
  </B></TD></TR></TBODY></TABLE></CENTER><BR><BR>
<CENTER>
<TABLE border=2>
  <TBODY>
  <TR>
    <TD align=middle bgColor=#000000 vAlign=center><FONT color=#ffcc33 
      face=Arial size=+3>CAPÍTULO V. COLOR CRACK</FONT><BR><FONT color=#ffcc33 
      size=+1><U>-Como Crackear Multimedia Builder 3.0- 
</U></FONT></TD></TR></TBODY></TABLE></CENTER><BR>
<P align=center><FONT color=#ffcc33 size=+1><U>Noviembre 
1998</U></FONT><BR><BR></P>
<CENTER>
<TABLE border=0>
  <TBODY>
  <TR>
    <TD align=middle bgColor=#ffcc33 vAlign=center><FONT color=#000000 
      size=+2><B>Indice</B></FONT> </TD></TR>
  <TR>
    <TD align=left vAlign=center><FONT color=#ffcc33 face=Arial 
      size=3><B><U>INTRODUCCIÓN</B></U></FONT> <BR><BR><FONT color=#ffcc33 
      face=Arial size=3><B><U>UN PRIMER VISTAZO</B></U></FONT> <BR><BR><FONT 
      color=#ffcc33 face=Arial size=3><B><U>PRIMER OSTIAZO</B></U></FONT> 
      <BR><BR><FONT color=#ffcc33 face=Arial size=3><B><U>ZEN CRACK 
      </B></U></FONT><BR><BR><FONT color=#ffcc33 face=Arial size=3><B><U>CRACK 
      EN COLORES</B></U></FONT> <BR><BR><FONT color=#ffcc33 face=Arial 
      size=3><B><U>CONCLUSIÓN 
</B></U></FONT><BR><BR></TD></TR></TBODY></TABLE></CENTER><BR><BR>
<TABLE bgColor=#000000 border=4>
  <TBODY>
  <TR>
    <TD align=left vAlign=top>
      <P><B><FONT color=#00ff00>INTRODUCCIÓN</FONT></B> </P>
      <P><B>Victima: Multimedia Builder 3.0<BR>Site: 
      www.mediachance.com<BR>Herramienta: Nuestro amado Sice y Zen crack. 
      <BR><BR>Hoy es un día de Heineiken,Café de de 
      Kenya,Moskovkaya,Guiness,Mahon y mujeres. </B></P>
      <P><B>Bueno, ya estamos de vuelta con un nuevo truco bajo el brazo: "Crack 
      en Color" que lo aplicaremos a nuestro conejillo de indias, el excelente 
      Multimedia Builder. Un programa para crear aplicacniones que incluyen 
      sonido, imagen,video. Se programa al estilovisual de VB . No os perdais el 
      reproductor de CD que viene con el ejemplo. </B></P>
    <TD></TD></TR></TBODY></TABLE><BR><BR>
<TABLE bgColor=#000000 border=4>
  <TBODY>
  <TR>
    <TD align=left vAlign=top>
      <P><B><FONT color=#00ff00>UN PRIMER VISTAZO</FONT> </B></P><B>Realmente 
      este programador se lo ha currado. Ha cerrado la mayoría de las puertas de 
      entrada a los crackers, por tanto hay que abrir otras como el <FONT 
      color=#ffcc33>"Crack en Color".</FONT> Veamos alguno de sus ingenios del 
      autor: <BR><BR>- Existe un número de serie que se introduce desde 
      "Help\About\Register"<BR><BR>- Cuando introducimos un número de serie 
      falso no aparece ninguna ventana de error.<BR>Por lo que queda descartado 
      el clásico "bpx messageboxexa".<BR><BR>- Las cadenas de caracteres 
      importantes las tiene encriptadas, por lo que no podemos buscarlas con el 
      "Search and Replace", lo que impide un crack en 5 minutos. </B>
    <TD></TD></TR></TBODY></TABLE><BR><BR>
<TABLE bgColor=#000000 border=4>
  <TBODY>
  <TR>
    <TD align=left vAlign=top>
      <P><B><FONT color=#00ff00>PRIMER OSTIAZO </FONT></B></P><B>Desechados los 
      ataques típicos, vamos a entrar por la puerta clásica siguiendo la pista 
      del Serial falso.<BR><BR>Metemos un número basura "12121212", Saltamos al 
      sice y ponemos 's 30:00 l ffffffff "12121212"'<BR>En cada ocurrecia XX:xx 
      aplicamos 'bpr XX:xx XX:xx+8 rw'. Una vez acabado damos al botón de OK y 
      BOOM, aparecemos en el sice. Unos F12 llegamos a la rutina 
      "GetwindowTextA".<BR>Dejamos esta línea de trabajo porque es muy aburrida. 
      <BR><BR>Al final conseguimos aislar una rutina en que devuelve 0 si 
      estamos registrados y 1 en otro caso.Podemos falsearla para registrarnos. 
      Y de hecho lo "conseguimos". Nuestro nombre aparece en la ventana de 
      registro. Pero hay una sorpresita. Si ejecutamos Project/Run aparece 
      "unregistered...". ¿Cómo es posible?<BR><BR>¡Pero SI estamos registrados!. 
      La cosa es aún peor, si nos peleamos con el registro y generamos un número 
      de serie válido las cosas no mejorar. ¿Que está pasando aquí? </B></TD></TR>
  <TR>
    <TD align=left vAlign=top>
      <P><B><FONT color=#00ff00>ZEN CRACK</FONT></B></P><B>Si hemos pasado el 
      algoritmo de registro satisfactoriamente, ¿porqué seguimos sin estar 
      registrados?.<BR>Razonemos, la única forma de no estar registrados es que 
      no pasemos alguna verificación. Sabemos que hemos pasado una, luego debe 
      de haber otra verifiación en otra parte del código. <BR><BR>Este 
      programador ha pensado un poco. HA SEPARADO LAS COMPROBACIONES del serial. 
      <BR>Y lo que es todavía más interesante, en cada comprobación analiza 
      cosas diferentes. Así, si se pasa completamente una comprobación no se 
      garantiza que se pase el resto.<BR><BR>Sabemos ya que por lo menos hay dos 
      comprobaciones (una que pasamos y otra no).<BR>Debe existir un nexo de 
      unión entre las comprobaciones: Una variable que guarde el serial que 
      hemos introducido. Pero aquín las variantes son múltiples :la primera 
      comprobación puede encriptar el serial para la segunda, modificar un flag 
      para que siempre resulte falsa la segunda comprobación... <BR><BR>La 
      pregunta que se plantea es ¿Cómo localizo la segunda comprobación?. <BR>La 
      única pista es el horrible letrero amarillo ".. unregistered ..". Se 
      podrían analizar todas las variables que modifica el primer algoritmo , 
      pero eso es demasiado costoso. Debemos buscar otra forma.<BR>La única 
      forma de saber que no hemos pasado las comprobaciones es el letrero 
      amarillo. Es por ahí por donde debemos atacar.<BR><BR>El mensaje está 
      encriptado ,luego desechamos esa vía.<BR>El letrero parece un Label al 
      estilo de de JAVA o Delphi, por lo que no tiene entidad propia como una 
      ventana.<BR>¿Por donde atacamos? </B></TD></TR>
  <TR>
    <TD align=left vAlign=top>
      <P><B><FONT color=#00ff00><FONT color=#00ff00>CRACK EN COLORES</FONT> 
      </FONT></B></P><B>Centremonos, ¿qué es lo que má llama la atención del 
      letrero? , su color amarillo.<BR>Este color debe de asignarse de alguna 
      forma. Además el amarillo parece que es el color de fondo del letreo. Si 
      desensamblamos a nuestro objetivo vemos que utiliza la función 
      setbkcolor.<BR>Así pues debemos localizar algo parecido a 
      "setbkcolor(Amarillo)".Pero como se expresa exactamente el color amarillo. 
      <BR><BR>Normalmente los colores se forman a partir de la combinación de 
      los llamados "colores básicos" .<BR>Lo normal es usar como colores básicos 
      RGB="Rojo Verde y Azul." Nuestro problema es como expresar el amarillo del 
      letrero en función de RGB. Por suerte nuestro amarillo es una simple 
      combinación. Podemos utilizar la paleta de colores de cualquier programa 
      para comprobarlo. En mi caso he usado el Visual Café 2.5 (crackeado por 
      supuesto).<BR>Introduciendo Rojo=255,Verde=255,Azul=0 obtenemos el mismo 
      amarillo que el del letrero. <BR><BR>Si el color hubiera sido más 
      complejo,capturamos la pantalla con el letrero y la importamos a un editor 
      gráfico como el Photoshop.Seleccionamos un pixel del color amarillo del 
      letreo y vemos sus componentes en términos de Rojo, Verde y Azul.<BR>Es 
      posible que exita un program que realize esta función más sencilla. Si lo 
      encontris, por favor notificádmelo.<BR><BR>Asi pues debemos de localizar 
      algo asi como "setbkcolor(255 255 0)". Necesitamos conocer si existen más 
      parámetros para el setbkcolor. Mirando el API tenemos:<BR><BR><PRE>COLORREF SetBkColor(HDC hdc,	// handle of device context  
                    COLORREF crColor 	// background color value
                    );	
The COLORREF value is a 32-bit value used to specify an RGB color. 
When specifying an explicit RGB color, the COLORREF value has the following hexadecimal form: 
0x00bbggrr  
</PRE>Nuestro color es un entero y se pasa como segundo parámetro. Dado 
      que los número se almacenan al revés debemos buscar 
      SetBkColor(hdc,0000ffff). Desempolvemos los manuales del Sice, por lo que 
      nos queda<BR><BR>bpx setbkcolor if (*(esp+8)==ffff0000)<BR><BR>Expliquemos 
      un poco el churro que ha aparecido. bpx setbkcolor indica que se pare 
      cuando se ejecute la rutina setbkcolor Se para cuando (*(esp+8)==00ffff), 
      es decir, cuando el contenido del registro EIP+8 sea 00ffff. Recordemos 
      que los parámteros a las funciones se pasan a través de la pila 
      (ESP=registro stack pointer):<BR><BR>Concretamente es ESP+8 porque en se 
      apilan dos palabra de 4 bytes cada uno. <PRE>Antes de la llamada ESP=000
	Llamada             ESP=Dirección de retorno. (palabra de 4 bytes)
			    ESP+4=parámetro HDC.(palabra de 4 bytes)
                            ESP+8=segundo parámetro


</PRE>Aplicando nuestro bpx y pulsando "Proyect/Run" BOOM, aparecemos en 
      el sice, para ver si estamos realmente ante el setbkcolor correcto, 
      cambiemos el color "d esp+8" Y pasamos de "FFFF00" a "FFFFFF" 
      .<BR>Obtenemos un bonito color blanco de fondo. Luego hemos pillado la 
      llamada correcta. Un par de f12 después obsevamos<BR><BR>:460a15 cmp 
      [ESI+378],43CA<BR><BR>Si los valores no son iguales vemos el mensaje de 
      error. Por tanto es este el flag que controla todo. Ya sólo basta ver 
      quien lo inicializa. Pero este es un trabajo conocido por todos que lo 
      dejo como ejercicio.<BR><BR>Fijaos como no se utiliza un clásico flag 1,0 
      sino un valor difícil 0x43CA. Un nuevo síntoma de que el autor ha leido 
      sobre cracks.<BR><BR></B></TD></TR></TBODY></TABLE><BR><BR>
<TABLE bgColor=#000000 border=4>
  <TBODY>
  <TR>
    <TD align=left vAlign=top>
      <P><B><FONT color=#00ff00>CONCLUSIÓN </FONT></B></P><B>Hemos aprendido una 
      nueva técnica: <FONT color=#ffcc33>"Color Crack".</FONT> Es recomendable 
      que se aplique cuando el mensaje de "unregistered "no sea una ventana sino 
      una cadena dentro de una ventana.<BR>Debemos averiguar el color que se 
      aplica al mensaje y colocar en el Sice:<BR><BR><FONT color=#ffcc33>bpx 
      nombreRutina if (*(esp+8)==00BBGGRR)</FONT> <BR><BR>Recordad que los 
      valores de Blue(azul),Green (Verde) , Red (rojo) están hexa.<BR><BR>Cuando 
      apararezcamos en el Sice cambiar el color para ver si estamos en la 
      ventana correcta. En tal caso buscar un salto que evite el 
      mesaje.<BR><BR>Este técnica siempre es aplicable, pero se recomienda que 
      se utulize cuando existan pocos colores en la ventana y el mensaje esté 
      resaltado del resto (cosa bastante habitual). <BR><BR>Una posible 
      generalización de está técina es aplicable al color del tipo de letra 
      (foregroundcolor), el tipo de fuente, (setFont), el aspecto (cursiva ...). 
      Recordad de echar mano de una buena ayuda Api para win32. <BR><BR>No 
      olvidemos el esquema de protección tan original de SEPARACIÓN DE 
      COMPROBACIONES que ha implementado el autor. Realmente interesante, si 
      señor. </B></TD></TR>
  <TR>
    <TD align=left vAlign=top>
      <P><B><FONT color=#00ff00><FONT color=#00ff00>Notas para los 
      lectores.</FONT> </FONT></B></P><B>1.- Los mensajes del tipo "Hazme el 
      crack para ....", "Dime como se crackea....", "Dime donde puedo 
      encontrar..." son automáticamente ignorados. El objetivo de estos 
      artículos es enseñar a crackear no enseñar a ser unos llorones ineptos que 
      sólo saben mendigar.<BR><BR>2.- Sólo responderé a preguntas teóricas sobre 
      cracks, indicando algunas pistas que faciliten la labor.<BR><BR>3.- 
      Narices, escribid artículos sobre los programas que crackeeis.<BR>De nada 
      sirve lo que aprendéis si no lo repartís, se os pudre en el cabeza, 
      palabra.<BR><BR>4.- Lamento no haber contestado a ciertos mails 
      interesantes. Desde aquí mis excusas.<BR><BR>5.- Si os ha servido para 
      algo mis artículos, no seáis vagos y mandad un mail indicándomelo. 
      </B><BR><BR><FONT color=#ffcc33>Estado+Porcino</FONT> 
      </B><BR><BR><B>Esperamos vuestras opiniones, sugerencias y ensayos en <A 
      href="mailto:estadoporcino@hotmail.com">estadoporcino@hotmail.com</A></B> 
      <BR><B>En breve analizaremos tipos de protecciones mucho más 
      interesantes.</B><BR>
      <P><B>Recordad bebed de la fuente, buscad a <FONT 
      color=#00ff00>+ORC</FONT> en la red.</B> </P></TD></TR></TBODY></TABLE><BR>
</BODY></HTML>
